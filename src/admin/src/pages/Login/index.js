import React from 'react'import BaseComponent from '../../components/BaseComponent'import {Link, withRouter} from 'react-router-dom'import {Row, Col, Input, Button, Modal} from 'antd'import styles from './index.module.css'import * as login from '../../resources/login'import Header from '../../components/Header'import Footer from '../../components/Footer'import CommonUtil from "../../utils/CommonUtil"import {connect} from 'react-redux'import * as userAction from '../../redux/actions/userAction'import Request from '../../utils/Request'class Login extends BaseComponent {    constructor(props) {        super(props);        this.state = {            backgroundHeight: 0,            account: '',            password: '',            isChecked: false,            visible: false,            email: '',        };        this.headHeight = 108;        this.fromPath = '';        this.onWindowResize = this.onWindowResize.bind(this);        this.handleInputChange = this.handleInputChange.bind(this);        this.handleCheck = this.handleCheck.bind(this);        this.login = this.login.bind(this);        this.register = this.register.bind(this);        this.forgetPassword = this.forgetPassword.bind(this);        this.handleOk = this.handleOk.bind(this);        this.handleCancel = this.handleCancel.bind(this);        this.showModal = this.showModal.bind(this);    }    componentDidMount() {        let isChecked = this.props.isChecked;        let account = this.props.account ? this.props.account : '';        this.setState({            backgroundHeight: window.innerHeight - this.headHeight,            isChecked: isChecked,            account: account        });        window.addEventListener('resize', this.onWindowResize);        this.fromPath = CommonUtil.getQueryString('_from', this.props.location.search) || '/';    }    componentWillUnmount() {        window.removeEventListener('resize', this.onWindowResize);    }    handleInputChange(event) {        const target = event.target;        const value = target.value;        const name = target.name;        this.setState({            [name]: value        })    }    handleCheck() {        this.setState({isChecked: !this.state.isChecked});    }    forgetPassword() {        this.showModal();    }    showModal() {        this.setState({visible: true})    }    hideModal() {        this.setState({visible: false})    }    // 忘记密码    async handleOk() {        let {email} = this.state;        if (email.trim() === '') return CommonUtil.toast('请输入邮箱');        if (!(CommonUtil.checkEmail(email))) return CommonUtil.toast('请检查邮箱格式');        let ret = await Request.forgetPassword({email});        if (ret.status !== 0) {            return CommonUtil.toast(ret.msg);        } else {            CommonUtil.toast('发送成功，请注意邮箱查收');            this.hideModal();        }    }    handleCancel() {        this.hideModal()    }    async login() {        let {account, password, isChecked} = this.state;        if (account.trim() === '') return CommonUtil.toast('请输入用户名');        if (password.trim() === '') return CommonUtil.toast('请输入密码');        let loginReq = await Request.login({account: account, password: password});        if (loginReq.status !== 0) {            return CommonUtil.toast(loginReq.msg);        }        loginReq.data.isChecked = isChecked;        this.props.dispatch({type: userAction.LOGIN, payload: loginReq.data});        if (this.fromPath === '/login' || this.fromPath === '/register') this.fromPath = '/';        this.props.history.replace(this.fromPath);    };    onWindowResize() {        this.setState({            backgroundHeight: window.innerHeight - this.headHeight        })    }    register() {        this.props.history.replace('/register');    }    render() {        return (            <div>                <Header></Header>                <div className={styles.wrapper}>                    <Row>                        <Col xs={24} sm={24} md={24} lg={24}>                            <img src={login.LOGIN_BG} alt="" className={styles.login_bg}/>                        </Col>                    </Row>                    <Row className={styles.formWrapper}>                        <Col xs={24} sm={24} md={24} lg={24}>                            <div className={styles.form}>                                <h3 className={styles.title}>登录</h3>                                <div className={styles.innerWrapper}>                                    <Input size="large" placeholder="用户名" defaultValue={this.props.account}                                           name='account' className={styles.input} onChange={this.handleInputChange}/>                                    <Input size="large" placeholder="密码" name='password' type='password'                                           className={styles.input} onChange={this.handleInputChange}/>                                    <div className={styles.checkWrapper}>                                        <p className={styles.checkCt}>                                            {                                                this.state.isChecked ? (                                                    <img src={login.ICON_CHECKED} className={styles.checkbox}                                                         onClick={this.handleCheck} alt=""/>                                                ) : (<img src={login.ICON_CHECK} className={styles.checkbox}                                                          onClick={this.handleCheck} alt=""/>)                                            }记住账号                                        </p>                                        <p className={styles.checkCt}>                                            <span className={styles.link} onClick={this.forgetPassword}> 忘记密码?</span>                                            <span className={styles.vertical_line}>|</span>                                            <span className={styles.link} onClick={this.register}>立即注册</span>                                        </p>                                    </div>                                    <div className={styles.login_btn_ct}>                                        <Button type='primary' className={styles.login_btn}                                                onClick={this.login}>登录</Button>                                    </div>                                </div>                                <div className={styles.underline_ct}>                                    <span className={styles.line}></span>                                    <span className={styles.tips}>第三方登录</span>                                    <span className={styles.line}></span>                                </div>                                <div className={styles.thirdWrapper}>                                    <img src={login.ICON_QQ} alt=""/>                                    <img src={login.ICON_WECHAT} alt=""/>                                    <img src={login.ICON_BLOG} alt=""/>                                </div>                                {/*忘记密码模态框*/}                                <Modal title='忘记密码'                                       visible={this.state.visible}                                       onOk={this.handleOk}                                       onCancel={this.handleCancel}                                       footer={[                                           <Button key="back" size="large" onClick={this.handleCancel}>取消</Button>,                                           <Button key="submit" type="primary" size="large" onClick={this.handleOk}>                                               发送                                           </Button>,                                       ]}                                       className={styles.modal}                                >                                    <p>请输入您的邮箱，我们会给您发送一个重置密码的链接</p>                                    <p>                                        <Input size="large" placeholder="邮箱" name='email' className={styles.input}                                               onChange={this.handleInputChange}/>                                    </p>                                </Modal>                            </div>                        </Col>                    </Row>                </div>                <Footer></Footer>            </div>        )    }}export default withRouter(connect(    state => {        return {            isChecked: state.user.isChecked,            account: state.user.account        }    })(Login))